<Window x:Class="TRPO.MainWindow"
         xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TRPO"
        mc:Ignorable="d"
        Title="MainWindow" Height="676" Width="1018" WindowStyle="None" ResizeMode="NoResize">
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF301616" Offset="0"/>
            <GradientStop Color="#FF6E3535" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Grid MouseDown="Rectangle_MouseDown_1">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF301616" Offset="0"/>
                <GradientStop Color="#FF6E3535" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Button x:Name="AddBut" Content="Добавить" HorizontalAlignment="Left" Margin="63,613,0,0" VerticalAlignment="Top" Width="158" Height="40" Background="#FF4B1111" BorderBrush="{x:Null}" Click="Button_Click"/>
        <DataGrid x:Name="DataGrid1" ColumnWidth="*" local:DataGridTextSearch.SearchValue="{Binding Text, ElementName=SearchBox, UpdateSourceTrigger=PropertyChanged}"  CanUserAddRows="false" IsReadOnly="true" HorizontalAlignment="Left" Height="272" Margin="63,104,0,0" VerticalAlignment="Top" Width="945" SelectionChanged="DataGrid1_SelectionChanged" LoadingRow="DataGrid1_LoadingRow" BorderBrush="#1F000000" Background="#FFF0EEEE" GridLinesVisibility="All">
            <DataGrid.Resources>
                <local:SearchValueConverter x:Key="SearchValueConverter" />
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="local:DataGridTextSearch.IsTextMatch">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                                <Binding RelativeSource="{RelativeSource Self}" Path="(local:DataGridTextSearch.SearchValue)" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="local:DataGridTextSearch.IsTextMatch" Value="True">
                            <Setter Property="Background" Value="#FFE68080" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

        </DataGrid>
        <Grid x:Name="ToolBar" Background="Transparent" HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="1001" MouseDown="ToolBar_MouseDown">
            <Image x:Name="closer" HorizontalAlignment="Left" Height="12" Margin="975,7,0,0" VerticalAlignment="Top" Width="16" MouseDown="closer_MouseDown" RenderTransformOrigin="0.706,0.542">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="крест.png"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="крестнаведение.png"/>

                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image x:Name="remover" HorizontalAlignment="Left" Height="9" Margin="940,8,0,0" VerticalAlignment="Top" Width="16" MouseDown="remover_MouseDown" RenderTransformOrigin="2,0.556">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="тире.png"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="тиренаведение.png"/>

                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

        </Grid>
        <Grid x:Name="vt" Visibility="Hidden"  Height="250" Width="200" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="63,87,0,0">
            <Polygon Fill="#96626a" StrokeThickness="3" Stroke="#96626a"
                     Points="0,8 0,200 190,200 190,8 37,8 29,0 21,8" Height="250" VerticalAlignment="Top"/>
            <Polygon Fill="#96626a" StrokeThickness="1" Stroke="#96626a"
                     Points="0,8 0,145 190,145 190,8 37,8 29,0 21,8" Margin="0,0,10,38"/>

            <Grid Margin="0,38,0,-8">
                <StackPanel Orientation="Vertical" Margin="0,-31,10,-28">
                    <Button Background="{x:Null}" Height="36" Foreground="White" BorderBrush="{x:Null}" Click="Button_Click_2">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock Text="Врачи" Height="20" FontSize="14"/>
                    </Button>
                    <Button Background="{x:Null}" Height="34"  Foreground="White" BorderBrush="{x:Null}" Click="Button_Click_3">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock Text="Пациенты" FontSize="14"/>
                    </Button>
                    <Button Background="{x:Null}" Height="33"   Foreground="White" BorderBrush="{x:Null}" Click="Button_Click_4">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock Text="Талоны" FontSize="14"/>
                    </Button>
                    <Button Background="{x:Null}" Height="33"  Foreground="White" BorderBrush="{x:Null}" Click="Button_Click_5">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock Text="Специальности врачей" FontSize="14"/>
                    </Button>
                    <Button Background="{x:Null}" Height="30"  Foreground="White" BorderBrush="{x:Null}" Click="Button_Click_6" >
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock Text="Участки" FontSize="14"/>
                    </Button>
                    <Button Background="{x:Null}" Height="29"  Foreground="White" BorderBrush="{x:Null}" Click="Button_Click_7">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                        <TextBlock Text="Медсестры"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        <DataGrid x:Name="DataGrid2" CanUserAddRows="false" IsReadOnly="true" HorizontalAlignment="Left" Height="197" Margin="744,408,0,0" VerticalAlignment="Top" Width="264" CanUserResizeColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" SelectionChanged="DataGrid2_SelectionChanged" Background="#FFF0EEEE"/>
        <Button Content="Выбрать" HorizontalAlignment="Left" Margin="744,613,0,0" VerticalAlignment="Top" Width="264" Click="Button_Click_11" Height="40" Background="#FF4B1111" BorderBrush="{x:Null}"/>
        <Grid x:Name="Spec" Visibility="Visible" HorizontalAlignment="Left" Height="127" Margin="46,421,0,0" VerticalAlignment="Top" Width="276">
            <TextBox x:Name="TBS" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Наименование" HorizontalAlignment="Left" Height="23" Margin="0,10,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="188" Background="{x:Null}" CaretBrush="Black" SelectionBrush="#FF4B1111" Foreground="White" MaxLength="15" PreviewTextInput="TBS_PreviewTextInput"/>
        </Grid>
        <Grid x:Name="GridVrach" Visibility="Hidden" HorizontalAlignment="Left" Height="245" Margin="48,360,0,0" VerticalAlignment="Top" Width="577">
            <TextBox x:Name="Vrach1" materialDesign:HintAssist.Hint="Фамилия" materialDesign:TextFieldAssist.UnderlineBrush="Wheat"  HorizontalAlignment="Left" Height="23" Margin="1,75,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="279" Background="{x:Null}" CaretBrush="#FF360F0F" SelectionBrush="#FF1D0909" Foreground="White" TextChanged="Vrach1_TextChanged" PreviewTextInput="Vrach1_PreviewTextInput" MaxLength="15"/>
            <TextBox x:Name="Vrach2" materialDesign:HintAssist.Hint="Имя" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="0,112,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="279" Background="{x:Null}" CaretBrush="#FF360F0F" SelectionBrush="#FF1D0909" Foreground="White" MaxLength="15" PreviewTextInput="Vrach2_PreviewTextInput"/>
            <TextBox x:Name="Vrach3" materialDesign:HintAssist.Hint="Отчество" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="0,158,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="280" Background="{x:Null}" CaretBrush="#FF360F0F" SelectionBrush="#FF1D0909" Foreground="White" MaxLength="15" PreviewTextInput="Vrach3_PreviewTextInput"/>
            <TextBox x:Name="Vrach4"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="413,75,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="154" Background="{x:Null}" IsReadOnly="True" CaretBrush="#FF360F0F" SelectionBrush="#FF1D0909" Foreground="White"/>
            <TextBox x:Name="Vrach5" materialDesign:HintAssist.Hint="Телефон"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="22" Margin="298,112,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="279" Background="{x:Null}" CaretBrush="#FF360F0F" SelectionBrush="#FF1D0909" Foreground="White" MaxLength="13" PreviewTextInput="Vrach5_PreviewTextInput" SelectionChanged="Vrach5_SelectionChanged" PreviewKeyDown="Vrach5_PreviewKeyDown"/>
            <TextBox x:Name="Vrach6"  materialDesign:TextFieldAssist.HasFilledTextField="False" materialDesign:HintAssist.Hint="Кабинет"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="298,158,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="279" Background="{x:Null}" CaretBrush="#FF360F0F" SelectionBrush="#FF1D0909" Foreground="White" MaxLength="3" PreviewTextInput="Vrach6_PreviewTextInput" TextChanged="Vrach6_TextChanged"/>
            <Button Content="Специальность ▤"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Margin="280,79,0,0" VerticalAlignment="Top" Width="149" Click="Button_Click_12" Height="28" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="12"/>
        </Grid>
        <Grid x:Name="GridPac" Visibility="Hidden" HorizontalAlignment="Left" Height="197" Margin="46,415,0,0" VerticalAlignment="Top" Width="606" RenderTransformOrigin="0.506,0.406">
            <TextBox x:Name="Pacient1" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Фамилия" HorizontalAlignment="Left" Height="23" Margin="10,20,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" Foreground="#FFFFFDFD" PreviewTextInput="Pacient1_PreviewTextInput" MaxLength="15" CaretBrush="#FF050506" SelectionBrush="#FF4B1111"/>
            <TextBox x:Name="Pacient2" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Имя" HorizontalAlignment="Left" Height="23" Margin="10,76,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" Foreground="#FFFFFDFD" PreviewTextInput="Pacient2_PreviewTextInput" MaxLength="15" CaretBrush="#FF050506" SelectionBrush="#FF4B1111"/>
            <TextBox x:Name="Pacient3" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Отчество" HorizontalAlignment="Left" Height="23" Margin="10,130,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" Foreground="#FFFFFDFD" PreviewTextInput="Pacient3_PreviewTextInput" MaxLength="15" CaretBrush="#FF050506" SelectionBrush="#FF4B1111"/>
            <TextBox x:Name="Pacient4" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Телефон" HorizontalAlignment="Left" Height="23" Margin="166,20,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" Foreground="#FFFFFDFD" PreviewKeyDown="Pacient4_PreviewKeyDown" PreviewTextInput="Pacient4_PreviewTextInput" SelectionChanged="Pacient4_SelectionChanged" MaxLength="13" CaretBrush="#FF050506" SelectionBrush="#FF4B1111"/>
            <TextBox x:Name="Pacient5" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Адрес" HorizontalAlignment="Left" Height="23" Margin="166,76,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" Foreground="#FFFFFDFD" PreviewTextInput="Pacient5_PreviewTextInput" MaxLength="15" CaretBrush="#FF050506" SelectionBrush="#FF4B1111"/>
            <TextBox x:Name="Pacient7" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="452,130,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" IsReadOnly="True" Foreground="#FFFFFDFD" CaretBrush="#FF050506" SelectionBrush="#FF4B1111"/>
            <Button Content="Участок ▤"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Margin="349,130,0,0" VerticalAlignment="Top" Width="103" Click="Button_Click_13" Height="28" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="12" Padding="4"/>
            <DatePicker x:Name="Pacient6"  Style="{x:Null}" HorizontalAlignment="Left" Margin="166,130,0,0" VerticalAlignment="Top" Height="34" Width="120"  Background="{x:Null}" Foreground="#FFACA2A3" FontWeight="Bold" BorderBrush="#FF2D1616">
                <DatePicker.Resources>
                    <Style TargetType="{x:Type DatePickerTextBox}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>

                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                    <Grid>
                                        <Grid.Resources>
                                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FF080606"/>
                                        </Grid.Resources>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver"/>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="WatermarkStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unwatermarked"/>
                                                <VisualState x:Name="Watermarked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>

                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">

                                            <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1" Visibility="Hidden"/>
                                                <Border x:Name="watermark_decorator" BorderBrush="{x:Null}" BorderThickness="0" Visibility="Visible">
                                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="True" Opacity="0" Padding="2"/>
                                                </Border>


                                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>
                </DatePicker.Resources>
            </DatePicker>
        </Grid>
        <Grid x:Name="GridMed" Visibility="Hidden" HorizontalAlignment="Left" Height="178" Margin="46,370,0,0" VerticalAlignment="Top" Width="505">
            <TextBox x:Name="Med1"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Имя" HorizontalAlignment="Left" Height="23" Margin="10,21,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Background="{x:Null}" MaxLength="15" Foreground="#FFFFF9F9" CaretBrush="Black" SelectionBrush="#FF4B1111" PreviewTextInput="Med1_PreviewTextInput"/>
            <TextBox x:Name="Med2"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Фамилия" HorizontalAlignment="Left" Height="23" Margin="10,75,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Background="{x:Null}" MaxLength="15" Foreground="#FFFFF9F9" CaretBrush="Black" SelectionBrush="#FF4B1111" PreviewTextInput="Med2_PreviewTextInput"/>
            <TextBox x:Name="Med3"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Отчество" HorizontalAlignment="Left" Height="23" Margin="10,127,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Background="{x:Null}" MaxLength="15" Foreground="#FFFFF9F9" CaretBrush="Black" SelectionBrush="#FF4B1111" PreviewTextInput="Med3_PreviewTextInput"/>
        </Grid>
        <Button x:Name="DeleteBut" Content="Удалить" HorizontalAlignment="Left" Margin="542,610,0,0" VerticalAlignment="Top" Width="173" Height="40" Background="#FF4B1111" BorderBrush="{x:Null}" Click="Button_Click_1" Visibility="Hidden"/>
        <Button x:Name="EditBut" Content="Редактировать" HorizontalAlignment="Left" Margin="48,613,0,0" VerticalAlignment="Top" Width="196" Height="38" Background="#FF4B1111" BorderBrush="{x:Null}" Click="Button_Click_14" Visibility="Hidden"/>
        <Button x:Name="AcceptBut" Content="✔" HorizontalAlignment="Left" Margin="286,613,0,0" VerticalAlignment="Top" Width="58" Height="38" Background="#FF4B1111" BorderBrush="{x:Null}" Click="Button_Click_15" Visibility="Hidden"/>
        <Button x:Name="SelEdit" Content="✎" HorizontalAlignment="Left" Margin="-17,235,0,0" VerticalAlignment="Top" Width="58" Height="38" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="16,4,0,4" Click="Button_Click_17">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                          Opacity="1"
                                          BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="SelDelete" Content="✘ " HorizontalAlignment="Left" Margin="-17,278,0,0" VerticalAlignment="Top" Width="58" Height="38" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="16,4,0,4" Click="Button_Click_18">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                          Opacity="1"
                                          BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="SelAdd" Content="➕" HorizontalAlignment="Left" Margin="-17,192,0,0" VerticalAlignment="Top" Width="58" Height="38" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="16,4,0,4" Click="Button_Click_16" Foreground="#DDFFFFFF">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                          Opacity="1"
                                          BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="DisAcceptBut" Content="❌" HorizontalAlignment="Left" Margin="364,612,0,0" VerticalAlignment="Top" Width="58" Height="38" Background="#FF4B1111" BorderBrush="{x:Null}" Click="DisAcceptBut_Click" Visibility="Hidden"/>
        <TextBox x:Name="SearchBox" materialDesign:HintAssist.Hint="Поиск" Margin="803,66,10,586" Background="#FFF0EEEE" CaretBrush="#FF633C3C" SelectionBrush="#FF976262" Padding="0,2" />
        <Button x:Name="ButFilt" Content="⧩" HorizontalAlignment="Left" Margin="770,66,0,0" VerticalAlignment="Top" Width="28" Height="24" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" Click="SelAdd_Copy_Click">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                Opacity="1"
                                BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Grid x:Name="filt" Visibility="Hidden"  Height="250" Width="200" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="754,95,0,0">
            <Polygon Fill="#96626a" StrokeThickness="3" Stroke="#96626a"
                Points="0,8 0,200 190,200 190,8 37,8 29,0 21,8" Height="250" VerticalAlignment="Top"/>
            <Polygon Fill="#96626a" StrokeThickness="1" Stroke="#96626a"
                Points="0,8 0,145 190,145 190,8 37,8 29,0 21,8" Margin="0,0,10,38"/>

            <Grid x:Name="FiltTalon" Visibility="Hidden" Margin="0,10,0,-8">

                <DatePicker x:Name="Date1" Style="{x:Null}" Margin="54,10,18,206" BorderBrush="#FF2E2D2D" Foreground="Black">
                    <DatePicker.Resources>

                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>

                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid.Resources>
                                                <SolidColorBrush x:Key="WatermarkBrush" Color="#FF080606"/>
                                            </Grid.Resources>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="WatermarkStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unwatermarked"/>
                                                    <VisualState x:Name="Watermarked">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="FocusStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unfocused"/>
                                                    <VisualState x:Name="Focused">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">

                                                <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1" Visibility="Hidden"/>
                                                    <Border x:Name="watermark_decorator" BorderBrush="{x:Null}" BorderThickness="0" Visibility="Visible">
                                                        <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="True" Opacity="0" Padding="2"/>
                                                    </Border>


                                                    <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>

                    </DatePicker.Resources>
                </DatePicker>
                <Label Content="От" Foreground="White" HorizontalAlignment="Left" Margin="25,18,0,0" VerticalAlignment="Top" Width="24"/>
                <Label Content="До" HorizontalAlignment="Left" Margin="26,42,0,0" VerticalAlignment="Top" Background="{x:Null}" Foreground="#DDFFFFFF"/>
                <DatePicker x:Name="Date2" Style="{x:Null}" HorizontalAlignment="Left" Margin="54,43,0,0" VerticalAlignment="Top" Width="128" TextInput="Date2_TextInput" Height="31" Background="{x:Null}" BorderBrush="#FF302E2E" Foreground="Black">
                    <DatePicker.Resources>

                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>

                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid.Resources>
                                                <SolidColorBrush x:Key="WatermarkBrush" Color="#FF080606"/>
                                            </Grid.Resources>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="WatermarkStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unwatermarked"/>
                                                    <VisualState x:Name="Watermarked">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="FocusStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unfocused"/>
                                                    <VisualState x:Name="Focused">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">

                                                <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1" Visibility="Hidden"/>
                                                    <Border x:Name="watermark_decorator" BorderBrush="{x:Null}" BorderThickness="0" Visibility="Visible">
                                                        <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="True" Opacity="0" Padding="2"/>
                                                    </Border>


                                                    <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>

                    </DatePicker.Resources>
                </DatePicker>
                <TextBox x:Name="ChVr" materialDesign:HintAssist.Hint="Пациент" HorizontalAlignment="Left" Height="23" Margin="53,101,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="129" TextChanged="ChVr_TextChanged" TextInput="ChVr_TextInput"/>
                <Button x:Name="SelAdd_Copy1" Visibility="Visible" Content="✔" HorizontalAlignment="Left" Margin="148,77,0,0" VerticalAlignment="Top" Width="34" Height="24" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" Click="SelAdd_Copy1_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}" >
                            <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                Opacity="1"
                                BlurRadius="6" Color="#FF5B0808"/>
                                </Border.Effect>
                                <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <TextBox x:Name="ChPac" materialDesign:HintAssist.Hint="Врач" HorizontalAlignment="Left" Height="23" Margin="53,143,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="129" TextChanged="ChPac_TextChanged" TextInput="ChPac_TextInput"/>
                <Button x:Name="SelAdd_Copy" Visibility="Visible" Content="X" HorizontalAlignment="Left" Margin="99,77,0,0" VerticalAlignment="Top" Width="34" Height="24" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" Click="SelAdd_Copy_Click_1">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}" >
                            <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                        Opacity="1"
                                        BlurRadius="6" Color="#FF5B0808"/>
                                </Border.Effect>
                                <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

            </Grid>
            <Grid x:Name="FiltVrach" Visibility="Hidden" Margin="0,10,0,-8">
                <TextBox x:Name="ChSpec" materialDesign:HintAssist.Hint="Специальность" HorizontalAlignment="Left" Height="23" Margin="25,17,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="142" TextChanged="ChSpec_TextChanged"/>

            </Grid>
            <Grid x:Name="FiltPac" Visibility="Hidden" Margin="0,10,0,-8">

                <DatePicker x:Name="ChDr1" Style="{x:Null}" Margin="54,5,18,211" BorderBrush="#FF342D2D">
                    <DatePicker.Resources>

                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>

                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid.Resources>
                                                <SolidColorBrush x:Key="WatermarkBrush" Color="#FF080606"/>
                                            </Grid.Resources>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="WatermarkStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unwatermarked"/>
                                                    <VisualState x:Name="Watermarked">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="FocusStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unfocused"/>
                                                    <VisualState x:Name="Focused">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">

                                                <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1" Visibility="Hidden"/>
                                                    <Border x:Name="watermark_decorator" BorderBrush="{x:Null}" BorderThickness="0" Visibility="Visible">
                                                        <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="True" Opacity="0" Padding="2"/>
                                                    </Border>


                                                    <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>

                    </DatePicker.Resources>
                </DatePicker>
                <Label Content="От" Foreground="White" HorizontalAlignment="Left" Margin="25,18,0,0" VerticalAlignment="Top" Width="24"/>
                <Label Content="До" HorizontalAlignment="Left" Margin="26,42,0,0" VerticalAlignment="Top" Background="{x:Null}" Foreground="#DDFFFFFF"/>
                <DatePicker x:Name="ChDr2" Style="{x:Null}" HorizontalAlignment="Left" Margin="54,40,0,0" VerticalAlignment="Top" Width="128" TextInput="Date2_TextInput" Height="32" BorderBrush="#FF383333">
                    <DatePicker.Resources>

                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>

                            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                        <Grid>
                                            <Grid.Resources>
                                                <SolidColorBrush x:Key="WatermarkBrush" Color="#FF080606"/>
                                            </Grid.Resources>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="WatermarkStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unwatermarked"/>
                                                    <VisualState x:Name="Watermarked">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="FocusStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition GeneratedDuration="0"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Unfocused"/>
                                                    <VisualState x:Name="Focused">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">

                                                <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1" Visibility="Hidden"/>
                                                    <Border x:Name="watermark_decorator" BorderBrush="{x:Null}" BorderThickness="0" Visibility="Visible">
                                                        <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="True" Opacity="0" Padding="2"/>
                                                    </Border>


                                                    <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>

                    </DatePicker.Resources>
                </DatePicker>
                <TextBox x:Name="ChUch" materialDesign:HintAssist.Hint="Участок" HorizontalAlignment="Left" Height="23" Margin="53,101,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="129" TextChanged="ChUch_TextChanged" TextInput="ChUch_TextInput"/>
                <Button x:Name="SelAdd_Copy2" Visibility="Visible" Content="✔" HorizontalAlignment="Left" Margin="148,77,0,0" VerticalAlignment="Top" Width="34" Height="24" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" Click="SelAdd_Copy2_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}" >
                            <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                        Opacity="1"
                                        BlurRadius="6" Color="#FF5B0808"/>
                                </Border.Effect>
                                <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="SelAdd_Copy3" Visibility="Visible" Content="X" HorizontalAlignment="Left" Margin="100,77,0,0" VerticalAlignment="Top" Width="34" Height="24" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" Click="SelAdd_Copy3_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type ButtonBase}" >
                            <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                        Opacity="1"
                                        BlurRadius="6" Color="#FF5B0808"/>
                                </Border.Effect>
                                <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

            </Grid>

        </Grid>
        <Button x:Name="ToEx" Content="Excel" HorizontalAlignment="Left" Margin="945,29,0,0" VerticalAlignment="Top" Width="58" Height="34" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0,4" Click="ToEx_Click" RenderTransformOrigin="0.5,0.5">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleY="-0.285"/>
                    <RotateTransform/>
                    <TranslateTransform Y="-0.162"/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                Opacity="1"
                                BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Grid x:Name="GridTalon" Visibility="Visible" HorizontalAlignment="Left" Height="184" Margin="48,429,0,0" VerticalAlignment="Top" Width="696">
            <Button Content="Пациент ▤"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Margin="381,21,0,0" VerticalAlignment="Top" Width="103" Click="Button_Click_8" Height="28" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="12" Padding="4"/>
            <Button Content="Врач ▤"  materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Margin="391,74,0,0" VerticalAlignment="Top" Width="60" Click="Button_Click_9" Height="28" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="12" Padding="4"/>
            <TextBox x:Name="TB4" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="484,79,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" IsReadOnly="True" Foreground="White"/>
            <DatePicker x:Name="TB1"  Style="{x:Null}" HorizontalAlignment="Left" Margin="24,33,0,0" VerticalAlignment="Top" Height="31" Width="170" CalendarOpened="TB1_CalendarOpened" Foreground="#FFACA2A3" FontWeight="Bold" PreviewKeyDown="TB1_PreviewKeyDown" BorderBrush="#FF2D1616" Background="{x:Null}">
                <DatePicker.Resources>

                    <Style TargetType="{x:Type DatePickerTextBox}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>

                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                    <Grid>
                                        <Grid.Resources>
                                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FF080606"/>
                                        </Grid.Resources>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver"/>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="WatermarkStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unwatermarked"/>
                                                <VisualState x:Name="Watermarked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>

                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">

                                            <Grid x:Name="WatermarkContent"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1" Visibility="Hidden"/>
                                                <Border x:Name="watermark_decorator" BorderBrush="{x:Null}" BorderThickness="0" Visibility="Visible">
                                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="True" Opacity="0" Padding="2"/>
                                                </Border>


                                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                </DatePicker.Resources>

            </DatePicker>
            <TextBox x:Name="TB2" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" materialDesign:HintAssist.Hint="Время приёма" HorizontalAlignment="Left" Height="23" Margin="24,85,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="172" Background="{x:Null}" TextChanged="TB2_TextChanged" IsReadOnly="True" Foreground="White"/>
            <TextBox x:Name="TB3" materialDesign:TextFieldAssist.UnderlineBrush="Wheat" HorizontalAlignment="Left" Height="23" Margin="484,23,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Background="{x:Null}" TextChanged="TB3_TextChanged" IsReadOnly="True" Foreground="White"/>
            <Grid x:Name="vr"  Visibility="Hidden"  Height="160" Width="200" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="190,108,0,-53">
                <Polygon Fill="#68262f" StrokeThickness="3" Stroke="#68262f"
                     Points="0,8 0,145 190,145 190,8 37,8 29,0 21,8" Height="122" VerticalAlignment="Top"/>
                <Polygon Fill="#96626a" StrokeThickness="1" Stroke="#96626a"
                     Points="0,8 0,145 190,145 190,8 37,8 29,0 21,8" Margin="0,0,10,38"/>
                <Grid Margin="0,10,0,38" Panel.ZIndex="500000">
                    <Button x:Name="Vr_800" Content="8:00" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Margin="3,11,0,0" VerticalAlignment="Top" Width="28" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_800_Click" FontSize="14" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_825"  Content="8:25" HorizontalAlignment="Left" Margin="41,11,0,0" VerticalAlignment="Top" Width="31" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_825_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_850" Content="8:50" HorizontalAlignment="Left" Margin="80,11,0,0" VerticalAlignment="Top" Width="32" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_850_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_915" Content="9:15" HorizontalAlignment="Left" Margin="117,11,0,0" VerticalAlignment="Top" Width="31" Height="17" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_915_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_940" Content="9:40" HorizontalAlignment="Left" Margin="155,11,0,0" VerticalAlignment="Top" Width="32" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_940_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1005" Content="10:05" HorizontalAlignment="Left" Margin="3,35,0,0" VerticalAlignment="Top" Width="34" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1005_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1030" Content="10:30" HorizontalAlignment="Left" Margin="41,35,0,0" VerticalAlignment="Top" Width="35" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1030_Click" Padding="0" RenderTransformOrigin="0.457,1.053" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1055" Content="10:55" HorizontalAlignment="Left" Margin="80,35,0,0" VerticalAlignment="Top" Width="35" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1055_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1120" Content="11:20" HorizontalAlignment="Left" Margin="117,35,0,0" VerticalAlignment="Top" Width="33" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1120_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1145" Content="11:45" HorizontalAlignment="Left" Margin="155,35,0,0" VerticalAlignment="Top" Width="34" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1145_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1210" Content="12:10" HorizontalAlignment="Left" Margin="3,59,0,0" VerticalAlignment="Top" Width="33" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1210_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1235" Content="12:35" HorizontalAlignment="Left" Margin="41,59,0,0" VerticalAlignment="Top" Width="35" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1235_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1300" Content="13:00" HorizontalAlignment="Left" Margin="80,59,0,0" VerticalAlignment="Top" Width="34" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1300_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1400" Content="14:00" HorizontalAlignment="Left" Margin="117,59,0,0" VerticalAlignment="Top" Width="36" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1400_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1425" Content="14:25" HorizontalAlignment="Left" Margin="155,59,0,0" VerticalAlignment="Top" Width="34" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1425_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1450" Content="14:50" HorizontalAlignment="Left" Margin="2,83,0,0" VerticalAlignment="Top" Width="38" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1450_Click" Padding="0" FontSize="14" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1515" Content="15:15" HorizontalAlignment="Left" Margin="41,83,0,0" VerticalAlignment="Top" Width="36" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1515_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1540" Content="15:40" HorizontalAlignment="Left" Margin="80,83,0,0" VerticalAlignment="Top" Width="34" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1540_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1605" Content="16:05" HorizontalAlignment="Left" Margin="117,83,0,0" VerticalAlignment="Top" Width="36" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1605_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button x:Name="Vr_1630" Content="16:30" HorizontalAlignment="Left" Margin="155,83,0,0" VerticalAlignment="Top" Width="34" Height="19" Background="{x:Null}" Foreground="#FFF0DEDE" BorderBrush="{x:Null}" Click="Vr_1630_Click" Padding="0" FontFamily="Calibri">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type ButtonBase}" >
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#68262f"/>

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#541c24"/>

                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>


                </Grid>
            </Grid>
            <Button x:Name="picTime" Content="🕡" HorizontalAlignment="Left" Margin="206,79,0,0" VerticalAlignment="Top" Width="28" Height="24" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" Click="picTime_Click">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type ButtonBase}" >
                        <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0"
                                    Opacity="1"
                                    BlurRadius="6" Color="#FF5B0808"/>
                            </Border.Effect>
                            <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <Button x:Name="ToEx_Copy" Content="Word" HorizontalAlignment="Left" Margin="872,29,0,0" VerticalAlignment="Top" Width="58" Height="34" Background="#FF4B1111" BorderBrush="{x:Null}" Padding="0,4" RenderTransformOrigin="0.5,0.5" Click="ToEx_Copy_Click">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleY="-0.285"/>
                    <RotateTransform/>
                    <TranslateTransform Y="-0.162"/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="15">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                Opacity="1"
                                BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="ButFilt_Copy" Content="" HorizontalAlignment="Left" Margin="56,60,0,0" VerticalAlignment="Top" Width="44" Height="22" BorderBrush="{x:Null}" Padding="0" Foreground="#DDFFFFFF" MouseDown="Image_MouseDown" Click="ButFilt_Copy_Click">
            <Button.Background>
                <ImageBrush ImageSource="table.png"/>
            </Button.Background>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type ButtonBase}" >
                    <Border x:Name="border1"   BorderBrush="{TemplateBinding BorderBrush}"   Background="{TemplateBinding Background}" SnapsToDevicePixels="True"  >
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                Opacity="1"
                                BlurRadius="6" Color="#FF5B0808"/>
                        </Border.Effect>
                        <ContentPresenter      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <materialDesign:PackIcon HorizontalAlignment="Left" Margin="1380,316,-378,0" VerticalAlignment="Top"/>
    </Grid>


</Window>
